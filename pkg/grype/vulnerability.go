package grype

import (
	"bufio"
	"fmt"
	"github.com/everfix/pkg/config"
	"os"
	"strings"
)

type Vulnerability struct {
	name     string
	pkgName  string
	severity string
	fixed    string
}

func GetVulnerability(filepath string) []Vulnerability {
	var vulnerabilities []Vulnerability
	file, err := os.Open(filepath)
	if err != nil {
		fmt.Println("Error reading vulnerability table file", err)
	}
	defer file.Close()
	scanner := bufio.NewScanner(file)
	for scanner.Scan() {
		line := scanner.Text()
		vulnerability := ParseLine(line)
		if vulnerability.name != "" && vulnerability.pkgName != "NAME" {
			vulnerabilities = append(vulnerabilities, vulnerability)
		}
	}
	return vulnerabilities
}

func ParseLine(line string) Vulnerability {
	var vulnerability Vulnerability
	strArray := strings.Fields(line)
	if len(strArray) == 6 {
		if strArray[2] == config.WONT_FIX {
			return vulnerability
		}
		vulnerability.severity = strArray[5]
		vulnerability.pkgName = strArray[0]
		vulnerability.name = strArray[4]
		vulnerability.fixed = strArray[2]
	} else if len(strArray) == 5 {
		vulnerability.severity = strArray[4]
		vulnerability.pkgName = strArray[0]
		vulnerability.name = strArray[3]
	}
	return vulnerability
}
