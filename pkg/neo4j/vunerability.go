package neo4j

import (
	"github.com/everfix/pkg/config"
	"github.com/neo4j/neo4j-go-driver/v4/neo4j"
)

func GetConnectedImages(vulnerabilityPkg string) ([]string, error) {
	client, err := CreateDriver(config.Uri, config.Username, config.Pwd, config.Realm)
	defer func(driver Client) {
		_ = CloseDriver(driver)
	}(client)
	if err != nil {
		return nil, err
	}
	session := client.NewSession(neo4j.SessionConfig{AccessMode: neo4j.AccessModeRead})
	defer session.Close()

	images, err := session.ReadTransaction(func(tx neo4j.Transaction) (interface{}, error) {
		var list []string
		result, err := tx.Run("match(n:Package {name: $pkg_name})<-->(b) return b.name",
			map[string]interface{}{"pkg_name": vulnerabilityPkg})
		if err != nil {
			return nil, err
		}
		for result.Next() {
			list = append(list, result.Record().Values[0].(string))
		}
		if err = result.Err(); err != nil {
			return nil, err
		}
		return list, nil
	})
	if err != nil {
		return nil, err
	}
	return images.([]string), nil
}
